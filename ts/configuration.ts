// -*- js -*-
// Copyright Â© 2018 by Ezer IT Consulting. All rights reserved. E-mail: claus@ezer.dk


// Client-side representation of Emdros database specification and type information


//****************************************************************************************************
// Configuration interface and related interfaces
// 
// The Configuration interface is described in the section "Database Specification File:
// PRIM.db.json" in the techical documentation.
//
interface Configuration {
    version           : number;
    databaseName      : string;
    propertiesName    : string;
    charSet           : string;
    databaseVersion   : string;
    granuarity        : string;
    surfaceFeature    : string;
    objHasSurface     : string;
    suffixFeature     : string;
    useSofPasuq       : boolean;
    objectSettings    : { [objectname : string ] : ObjectSetting; };
    universeHierarchy : UHTriple[];
    picDb             : string;
    sentencegrammar   : SentenceGrammar[]; // Defined in sentencegrammar.ts
    maxLevels?        : number; // Number of Emdros object levels (word, phrase, clause, etc.) Added programmatically by the client side code
}

interface ObjectSetting {
    mayselect?          : boolean;
    additionalfeatures? : string;
    featuresetting?     : { [featurename : string] : FeatureSetting; };
}

interface FeatureSetting {
    hideWord?                : boolean;
    foreignText?             : boolean;
    transliteratedText?      : boolean;
    ignoreSelect?            : boolean;
    ignoreShowRequest?       : boolean;  // Should be removed. Means: ignoreShow==true && ignoreRequest==true
    ignoreShow?              : boolean;
    ignoreRequest?           : boolean;
    isDefault?               : boolean;
    matchregexp?             : string;
    isRange?                 : boolean;
    hideValues?              : string[];
    otherValues?             : string[];
    alternateshowrequestDb?  : string; 
    alternateshowrequestSql? : string;
    indirdb?                 : string;
    sql_command?             : string;
    sqlargs?                 : string[];
    multiple?                : boolean;
}

interface UHTriple {
    type : string;
    feat : string;
}


//****************************************************************************************************
// configuration variable
//
// Contains the Emdros database specification.
// The variable is generated by the server code.
//
declare let configuration : Configuration;


//****************************************************************************************************
// getObjectSetting function
//
// Retrieves the ObjectSetting data for a particular Emdros object type.
//
// Parameter:
//     otype: Emdros object type
// Returns:
//     ObjectSetting for the specified object type
//
function getObjectSetting(otype : string) : ObjectSetting {
    return configuration.objectSettings[otype];
}

//****************************************************************************************************
// getFeatureSetting function
//
// Retrieves the FeatureSetting data for a particular Emdros object type and feature.
//
// Parameter:
//     otype: Emdros object type
//     feature: Emdros feature
// Returns:
//     FeatureSetting for the specified object type and feature
//
function getFeatureSetting(otype : string, feature : string) : FeatureSetting {
    // Handle the pseudo-feature 'visual'
    if (feature==='visual') {
        otype = configuration.objHasSurface;
        feature = configuration.surfaceFeature;
    }

    // Remove format specification if present in feature name
    let io = feature.indexOf('_TYPE_');
    if (io!=-1)
        feature = feature.substr(0,io);

    return getObjectSetting(otype).featuresetting[feature];
}


//****************************************************************************************************
// TypeInfo interface and related interface
// 
// The TypeInfo interface is described in the section "Database Type Information File:
// PRIM.typeinfo.json" in the techical documentation.
//
interface TypeInfo {
    objTypes    : string[];
    obj2feat    : {[objType : string] : FeatureMap;};
    enumTypes   : string[];
    enum2values : { [enumname : string] : string[]; };
}

interface FeatureMap {
    [featName : string] : string;
}


//****************************************************************************************************
// typeinfo variable
//
// Contains the Emdros type information.
// The variable is generated by the server code.
//
declare let typeinfo : TypeInfo;
